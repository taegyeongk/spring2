<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 id가 각 연결되는 메소드 이름 -->
	<select id="selectEmpList" resultType="EmpVO">
		SELECT employee_id,
		last_name, email, hire_date, job_id, salary
		FROM employees
		ORDER BY
		employee_id
	</select>
	<!-- 단건조회 -->
	<!-- $는 홀따옴표를 아예 제외(property state) 마이바티스 default는 # -->
	<select id="selectEmpInfo" resultType="EmpVO">
		SELECT employee_id, last_name, email, hire_date, job_id, salary
		FROM
		employees
		WHERE employee_id = #{employeeId}
		<!-- column LIKE '%' || #{field} || '%' column LIKE '%${field}%'` 예시로 $와 
			#의 차이점 알아놓기 #안에 사용되는 값은 파라미터 객체의 필드 값을 들고온다. -->
	</select>
	<!-- 등록 -->
	<!-- selectKey 의 컬럼, 값은 단일값을 가진다. 그리고 이 값은 파라미터타입으로 사용하는 empvo안에 담긴다. -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
		<selectKey keyProperty="employeeId" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(employee_id), 0) + 1
			FROM employees
		</selectKey>
		INSERT INTO employees(
		employee_id, last_name, email, hire_date,
		job_id, salary
		) VALUES ( #{employeeId}, #{lastName}, #{email}, #{hireDate}, #{jobId},
		#{salary})

	</insert>
	<!-- 수정 : 전제조건 필요, 전체 데이터 전송됨 -->
	<update id="updateEmpInfo" parameterType="EmpVO">
		UPDATE employees
		SET
		last_name = #{lastName}, email = #{email}, salary = #{salary}
		WHERE employee_id
		= #{employeeId}
	</update>
	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		WHERE employee_id = #{eid}
	</delete>

	<!-- 수정 : 변경된 데이터만 수정 -->
	<update id="updateEmpInfoDynamic" parameterType="EmpVO">
		UPDATE employees
		SET
		<choose>
			<!-- lastName이라는 문자는 null이거나 공백도 아니어야함 -->
			<when test="lastName != null and !lastName.equals('')">
				last_name = #{lastName}
			</when>
		<otherwise>
			last_name = 'Any'
		</otherwise>
		</choose>
		<if test="email != null">
			<!-- 공백을 허용함 test 안에는 _를 사용하지않는다. -->
			,email = #{email}
		</if>
		<if test="salary >= 0">
			<!-- int 타입은 절대로 null이 될 수 없다. -->
			,salary = #{salary}
		</if>
		<where>
			<if test="employeeId > 0">
				employee_id = #{employeeId}
			</if>
		</where>
	</update>
	
	<update id="updateEmpSal">
	<!-- param 어노테이션은 매개변수가 두개 이상일 때 구분을 하기위해서는 반드시 이름을 정해준다. -->
		UPDATE employees
			SET salary = salary * #{info.salary}
		WHERE employee_id = #{eid}
	
	</update>



</mapper>